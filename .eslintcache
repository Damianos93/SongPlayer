[{"C:\\Users\\Damien\\Desktop\\YoutubeTuts\\deved\\player\\src\\index.js":"1","C:\\Users\\Damien\\Desktop\\YoutubeTuts\\deved\\player\\src\\App.js":"2","C:\\Users\\Damien\\Desktop\\YoutubeTuts\\deved\\player\\src\\reportWebVitals.js":"3","C:\\Users\\Damien\\Desktop\\YoutubeTuts\\deved\\player\\src\\components\\Song.jsx":"4","C:\\Users\\Damien\\Desktop\\YoutubeTuts\\deved\\player\\src\\components\\Player.jsx":"5","C:\\Users\\Damien\\Desktop\\YoutubeTuts\\deved\\player\\src\\utils.jsx":"6","C:\\Users\\Damien\\Desktop\\YoutubeTuts\\deved\\player\\src\\components\\Library.jsx":"7","C:\\Users\\Damien\\Desktop\\YoutubeTuts\\deved\\player\\src\\components\\LibrarySong.jsx":"8","C:\\Users\\Damien\\Desktop\\YoutubeTuts\\deved\\player\\src\\components\\Nav.jsx":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":2240,"mtime":1607539773905,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":312,"mtime":1607445462507,"results":"14","hashOfConfig":"11"},{"size":3306,"mtime":1607539548026,"results":"15","hashOfConfig":"11"},{"size":2221,"mtime":1607273787531,"results":"16","hashOfConfig":"11"},{"size":730,"mtime":1607447454623,"results":"17","hashOfConfig":"11"},{"size":901,"mtime":1607539505058,"results":"18","hashOfConfig":"11"},{"size":490,"mtime":1607447245549,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1x1citu",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Damien\\Desktop\\YoutubeTuts\\deved\\player\\src\\index.js",[],["41","42"],"C:\\Users\\Damien\\Desktop\\YoutubeTuts\\deved\\player\\src\\App.js",[],"C:\\Users\\Damien\\Desktop\\YoutubeTuts\\deved\\player\\src\\reportWebVitals.js",[],"C:\\Users\\Damien\\Desktop\\YoutubeTuts\\deved\\player\\src\\components\\Song.jsx",[],"C:\\Users\\Damien\\Desktop\\YoutubeTuts\\deved\\player\\src\\components\\Player.jsx",["43"],"import React, { useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Player({\r\n  setCurrentSong,\r\n  currentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  songInfo,\r\n  setSongInfo,\r\n  songs,\r\n  setSongs,\r\n}) {\r\n  useEffect(() => {\r\n    const newSongs = songs.map(\r\n      (song) => {\r\n        if (song.id === currentSong.id) {\r\n          return {\r\n            ...song,\r\n            active: true,\r\n          };\r\n        } else {\r\n          return {\r\n            ...song,\r\n            active: false,\r\n          };\r\n        }\r\n      },\r\n      [currentSong]\r\n    );\r\n    // setSongs(newSongs);\r\n  });\r\n\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === \"skip-forward\") {\r\n      setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (direction === \"skip-back\") {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        await\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n        if(isPlaying)audioRef.current.play()\r\n        return;\r\n      }\r\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n    if(isPlaying)audioRef.current.play()\r\n  };\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <h1>{getTime(songInfo.currentTime)}</h1>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            type=\"range\"\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currentTime}\r\n            onChange={dragHandler}\r\n          />\r\n          <div style={trackAnim} className=\"animate-track\"></div>\r\n        </div>\r\n        <h1>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</h1>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-back\")}\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-forward\")}\r\n          className=\"skip-back\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Player;\r\n","C:\\Users\\Damien\\Desktop\\YoutubeTuts\\deved\\player\\src\\utils.jsx",[],"C:\\Users\\Damien\\Desktop\\YoutubeTuts\\deved\\player\\src\\components\\Library.jsx",[],"C:\\Users\\Damien\\Desktop\\YoutubeTuts\\deved\\player\\src\\components\\LibrarySong.jsx",[],["44","45"],"C:\\Users\\Damien\\Desktop\\YoutubeTuts\\deved\\player\\src\\components\\Nav.jsx",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":22,"column":11,"nodeType":"52","messageId":"53","endLine":22,"endColumn":19},{"ruleId":"46","replacedBy":"54"},{"ruleId":"48","replacedBy":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'newSongs' is assigned a value but never used.","Identifier","unusedVar",["56"],["57"],"no-global-assign","no-unsafe-negation"]